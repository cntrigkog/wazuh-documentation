.. _vulnerability-detector:

Vulnerability detector
=======================

.. versionadded:: 3.2.0

It has been developed a **vulnerability detector** which allows to contrast the agents' software with the most updated and official vulnerabilities databases.
With this in mind, this wodle provides information about known vulnerabilities affected by the installed software, including detailed information as the related CVE, the vulnerability severity and many other things.

- `What it is Vulnerability detector?`_
- `How it works?`_
- `Compatibility matrix`_
- `Use case: Configuration and deployment`_
- `Example alerts`_

What it is Vulnerability detector?
-----------------------------------

The vulnerability detector is a component capable of collect the programs inventory of Wazuh agents, looking for known vulnerabilities along them periodically.
It is a simple way to be aware of installed packages that would be malicious for the agents, and know the cause of that vulnerability as well as how to fix it.


How it works?
--------------

The `Syscollector` wodle collects the needed information about the installed software for all agents, storing it in the Wazuh database of the manager. In parallel, the vulnerability detector checks the official vulnerability databases for the compatibles
Operating Systems looking for updated databases.

Vulnerability databases are updated according to the time interval configured for each repository. On this process, it will be checked if the official repositories of each distribution have updated their
information. Only if the official repository has been updated, the wodle downloads the latest version.

The vulnerability detection process will also run under its own interval time. To do this, the wodle consults the list of updated software of each agent to compare it with the vulnerability databases, triggering alerts in case of finding vulnerable packages.

Vulnerabilities detected will always been related to a specific CVE *(Common Vulnerabilities and Exposures)*, a widely known reference in terms of software vulnerabilities and exposures.

Compatibility matrix
---------------------

The following table shows the Operating Systems that the vulnerability detector supports at the moment.

+---------------+-------------+
| Distribution  | Versions    |
+===============+=============+
| Redhat        | 5, 6, 7     |
+---------------+-------------+
| Centos        | 5, 6, 7     |
+---------------+-------------+
| Ubuntu        | 12, 14, 16  |
+---------------+-------------+

Use case: Configuration and deployment
--------------------------------------

The following example shows how to configure the necessary components to run the vulnerability detection process.

First of all, the software collection has to be activated in agents that will be analyzed.
This is done by setting the ``programs`` tag to ``yes`` in the :doc:`Syscollector configuration<../reference/ossec-conf/wodle-syscollector>`.

.. code-block:: xml
  :emphasize-lines: 5

    <wodle name="syscollector">
      <disabled>no</disabled>
      <interval>1h</interval>
      ...
      <programs>yes</programs>
      ...
    </wodle>

It is needed to activate the **vulnerability detector** in the manager as well, this can be done following its :doc:`configuration guide<../reference/ossec-conf/wodle-vuln-detector>`.

For example, the next case of use configures the vulnerability detection to run with a frequency of one day. In addition, it will update RedHat 7/6 databases every 15h and Ubuntu 16/14 databases every 10h.

.. code-block:: xml

    <wodle name="vulnerability-detector">
      <disabled>no</disabled>
      <interval>1d</interval>
      <run_on_start>yes</run_on_start>
      <update_ubuntu_oval interval="10h" version="16,14">yes</update_ubuntu_oval>
      <update_redhat_oval interval="15h" version="7,6">yes</update_redhat_oval>
    </wodle>

After the configuration is set correctly and the wodle performs the assessment, alerts are triggered for each vulnerability found, as is shown below.

Example alerts
--------------

The following alerts show how the vulnerabilities are detected by the Vulnerability detector wodle. The most relevant information that these alerts provide are the following:

- CVE: The CVE identifier for the corresponding vulnerability.
- Severity: It specifies the impact of the vulnerability in terms of security.
- Published: Date when the vulnerability was included in the official database.
- Reference: URL of the official database website with extra information of the vulnerability.
- Rationale: Broad description of the vulnerability.
- State: This field informs if it exists a patch for the vulnerability (*fixed*) or instead, its state.

.. code-block:: console
   :emphasize-lines: 3,6

    ** Alert 1518102634.152105: - vulnerability-detector,
    2018 Feb 08 16:10:34 (webserver) ->vulnerability-detector
    Rule: 23504 (level 7) -> 'CVE-2016-4491 on Ubuntu 14.04 LTS (trusty) - medium.'
    vulnerability.cve: CVE-2016-4491
    vulnerability.title: CVE-2016-4491 on Ubuntu 16.04 LTS (trusty) - medium.
    vulnerability.severity: Medium
    vulnerability.published: 2017-02-24
    vulnerability.updated: 2017-02-24
    vulnerability.reference: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-4491
    vulnerability.rationale: The d_print_comp function in cp-demangle.c in libiberty allows remote attackers to cause a denial of service (segmentation fault and crash) via a crafted binary, which triggers infinite recursion and a buffer overflow, related to a node having "itself as ancestor more than once."
    vulnerability.state: Pending confirmation
    vulnerability.affected_package: gdb
    vulnerability.version: 7.11.1-0ubuntu1~14.4


CentOS 7 example alert
^^^^^^^^^^^^^^^^^^^^^^

.. code-block:: console
   :emphasize-lines: 3,6

   ** Alert 1518137514.5302344: - vulnerability-detector,
   2018 Feb 09 00:51:54 (manager) ->vulnerability-detector
   Rule: 23505 (level 10) -> 'RHSA-2018:0180: kernel-alt security and bug fix update (Important)'
   vulnerability.cve: RHSA-2018:0180
   vulnerability.title: RHSA-2018:0180: kernel-alt security and bug fix update (Important)
   vulnerability.severity: High
   vulnerability.published: 2018-01-25
   vulnerability.updated: 2018-01-25
   vulnerability.reference: https://access.redhat.com/errata/RHSA-2018:0180
   vulnerability.rationale: The kernel-alt packages provide the Linux kernel version 4.x.
   Security Fix(es):
   * A flaw was found in the patches used to fix the 'dirtycow' vulnerability (CVE-2016-5195). An attacker, able to run local code, can exploit a race condition in transparent huge pages to modify usually read-only huge pages. (CVE-2017-1000405)
   Red Hat would like to thank Eylon Ben Yaakov and Daniel Shapiro for reporting this issue.
   Bug Fix(es):
   * Due to a bug in the ixgbe and i40e drivers, the socket buffer list (skb list) in some cases got corrupted when running Red Hat Enterprise Linux 7.4 with the kernel version provided by the kernel-alt package on the POWER9 systems. Consequently, a kernel panic occurred. This update fixes ixgbe and i40e, and the kernel no longer panics due to this behavior. (BZ#1518412)
   * Users can lower the max_sectors_kb setting in the sysfs file system to accommodate certain workloads. Previously, users needed to set the maximum I/O size to either the block layer default or the optional preferred I/O size reported by the device. This update fixes the scsi driver to keep the current heuristic function for the initial setting of max_sectors_kb. As a result, for subsequent invocations, the driver now only updates the current queue limit if it exceeds the capabilities of the hardware. (BZ#1518432)
   * When performing full-bootme tests on Boston ESS systems running Red Hat Enterprise Linux 7.4 with the kernel version provided in the kernel-alt package, a kernel panic occurred and the operating system dropped into the XMON software. This update fixes the Multi-Queue Block IO Queueing Mechanism (blk-mq), and the kernel no longer panics in these circumstances. (BZ#1518433)
   * When running the stress test on the file system with the gssstress command, and pulling one disk from one recovery group, &quot;kernel I/O error&quot; was reported, and gssstress became unresponsive. Gssstress now works as expected under the described circumstances. (BZ#1522645)
   * When using the fwupdate_xl710 utility to apply updates for NVM Intel Ethernet Converged Network Adapter XL710 on machines running Red Hat Enterpise Linux 7.4 with the kernel version provided in the kernel-alt package, a deadlock sometimes occurred when the i40e driver was acquiring access to the Non-Volatile Memory (NVM) of the device. Consequently, NVM acquire timeouts occurred, the firmware update failed with the following error message: &quot;Failed Acquiring NVM resource for read err=-53    status=0xa&quot;, and left the device's memory in a corrupted state. This update fixes the i40e driver, and the firmware updates no longer fail due to this behavior. (BZ#1522843)
   * Previously, on POWER9 systems with more than 100 Pstates, the cpufreq driver did not handle the cases when the NxN matrix denominated transition table (trans_table) overflowed beyond the PAGE_SIZE boundary correctly. Consequently, reading trans_table for any of the CPUs failed with the following error:
   &quot;fill_read_buffer: show+0x0/0xa0 returned bad count&quot;
   With this update reading trans_table for any of the CPUs now proceeds as expected under the described circumstances. (BZ#1522844)
   * Previously, the /sys/firmware/opal/exports directory did not contain an export node. Consequently, a range of memory in the Open Power Abstraction Layer (OPAL) that the operating system attempted to export to user space for debugging purposes was not available. With this update the sysfs file under /sys/firmware/opal/exports is now available for each property found there, and this file can be used for debugging purposes. (BZ#1522845)
   vulnerability.state: Fixed
   vulnerability.affected_package: kernel-devel
   vulnerability.version: 3.10.0-514.26.2.el7
